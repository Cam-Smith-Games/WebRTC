{"version":3,"file":"main.js","mappings":"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","sources":["webpack://webrtc-test/./src/game/ball.ts","webpack://webrtc-test/./src/game/keys.ts","webpack://webrtc-test/./src/game/object.ts","webpack://webrtc-test/./src/game/peer_game.ts","webpack://webrtc-test/./src/game/player.ts","webpack://webrtc-test/./src/math/util.ts","webpack://webrtc-test/./src/math/vec.ts","webpack://webrtc-test/./src/peer/client.ts","webpack://webrtc-test/./src/peer/host.ts","webpack://webrtc-test/./src/peer/peer.ts","webpack://webrtc-test/./src/util/mouse.ts","webpack://webrtc-test/./src/util/promise.ts","webpack://webrtc-test/webpack/bootstrap","webpack://webrtc-test/webpack/runtime/define property getters","webpack://webrtc-test/webpack/runtime/hasOwnProperty shorthand","webpack://webrtc-test/webpack/runtime/make namespace object","webpack://webrtc-test/./src/main.ts"],"sourcesContent":["import { ICircle } from \"../math/geom\";\r\nimport { IPongObject, PongObject } from \"./object\";\r\nimport { PeerGame } from \"./peer_game\";\r\n\r\ninterface IBall extends IPongObject, ICircle {};\r\n\r\nexport class Ball extends PongObject implements ICircle {\r\n    radius: number;\r\n    \r\n    constructor(obj:IBall) {\r\n        super(obj);\r\n    }\r\n\r\n    update(delta:number, game:PeerGame<any>) {\r\n\r\n    }\r\n\r\n    render(game:PeerGame<any>) {\r\n        game.ctx.fillStyle = this.color;\r\n        game.ctx.beginPath();\r\n        game.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n        game.ctx.fill();\r\n    }\r\n}\r\n\r\n","\r\n\r\ntype KeyStatus = \"down\" | \"held\" | \"up\";\r\n\r\n/** actions to execute for specific Key Status */\r\ntype KeyActionMap = Partial<Record<KeyStatus, Record<string, Function>>>;\r\n\r\n\r\nexport class KeyHandler implements KeyActionMap {\r\n\r\n    down:Record<string,Function>\r\n    held:Record<string,Function>\r\n    up:Record<string,Function>\r\n\r\n\r\n    /** object containing status of a specific key */\r\n    keys:Record<KeyStatus,Record<string,boolean>> = {\r\n        /** true for 1 frame when key is pressed */\r\n        down:{},\r\n        /* true for entire hold duration between down and up */\r\n        held:{},\r\n        /** true for 1 frame when key is released */\r\n        up:{}  \r\n    };\r\n\r\n    constructor(args?:KeyActionMap) {\r\n        this.down = args?.down || {};\r\n        this.held = args?.held || {};\r\n        this.up = args?.up || {};\r\n    }\r\n\r\n    /** executes relevant actions based on key status */\r\n    handle(...args:any[]) {\r\n        for (let key in this.keys.down)     if (key in this.down)       this.down[key](...args)  \r\n        for (let key in this.keys.held)     if (key in this.held)       this.held[key](...args)   \r\n        for (let key in this.keys.up)       if (key in this.up)         this.up[key](...args)\r\n    }\r\n\r\n    update() {\r\n        for (let key in this.keys.down) this.keys.held[key] = true;\r\n        for (let key in this.keys.up) delete this.keys.held[key];\r\n\r\n        // up/down only kept for 1 frame\r\n        this.keys.down = {};\r\n        this.keys.up = {};\r\n    }\r\n    \r\n}","import { IRect } from \"../math/geom\";\r\nimport { PeerGame } from \"./peer_game\";\r\n\r\n\r\nexport interface IRenderable { \r\n    color:string;\r\n}\r\n/** Base GameObject that all objects inherit from\r\n * \r\n * NOTE: the ball actually has a rectangle hitbox. \r\n *          Don't feel like doing Rect->Circle collision rn so i'm saving it for later \r\n */\r\n\r\n\r\n export interface IPongObject extends IRect, IRenderable {}\r\n export abstract class PongObject implements IPongObject {\r\n  \r\n     color:string; x:number; y:number; w:number; h:number;\r\n \r\n     constructor(obj?:IPongObject) {\r\n         Object.assign(this, obj); \r\n     }\r\n \r\n \r\n     abstract update(delta:number, game:PeerGame<any>): void;\r\n     abstract render(game:PeerGame<any>): void;\r\n     \r\n }\r\n ","import { IPoint } from \"../math/geom\";\r\nimport { Client } from \"../peer/client\";\r\nimport { Host } from \"../peer/host\";\r\nimport { Peer } from \"../peer/peer\";\r\nimport { Mouse } from \"../util/mouse\";\r\nimport { SuperPromise } from \"../util/promise\";\r\nimport { Ball } from \"./ball\";\r\nimport { KeyHandler } from \"./keys\";\r\nimport { IPongObject } from \"./object\";\r\nimport { Player, RemotePlayer } from \"./player\";\r\n/*\r\n\r\n- keep track of time between peer messages\r\n- if it exceeds threshold, classify it as a disconnect\r\n    - in this case, it will pause the game and wait for anohter message\r\n        - upon reconnection, it will demand a resync between the 2 clients:\r\n            - game sends resync message, which fully updates peer to be in sync with host\r\n            - game doesnt resuume until peer sends response message\r\n            - this message will use label \"host-sync\" or something\r\n\r\n\r\n - game idea: SLING PONG\r\n    - similiar to pong where u gotta get ball behind opponent's wall\r\n    - move with mouse, bound to your half of table\r\n    - left click to catch the ball\r\n    - hold left click to prepare sling shot\r\n    - pull it back then release to sling shot the ball\r\n\r\n*/\r\n\r\n\r\n\r\n// host moves like normal\r\n// for other player:\r\n//   player sends past X inputs\r\n//   host receives input message, applies to player, responds with true player position\r\n//   player receives true position, interpolates towards it\r\n//      ideally youd just jump straight to correct position, but interpolating will result in smoother looking gameplay\r\n\r\ninterface IMouse extends IPoint {\r\n    released: boolean,\r\n    down: IPoint,\r\n    right: boolean\r\n}\r\nexport abstract class PeerGame<P extends Peer> {\r\n\r\n    player: Player;\r\n    remote: RemotePlayer;\r\n\r\n    players:Player[];\r\n\r\n    ball:Ball;\r\n\r\n    ctx:CanvasRenderingContext2D;\r\n\r\n    keys:KeyHandler;\r\n\r\n    protected rtc:RTCPeerConnection;\r\n\r\n    constructor(rtc:RTCPeerConnection) {\r\n        this.rtc = rtc;\r\n\r\n        const canvas = <HTMLCanvasElement>document.getElementsByTagName(\"canvas\")[0];\r\n        canvas.width = 1920;\r\n        canvas.height = 1080;  \r\n        this.ctx = canvas.getContext(\"2d\");  \r\n\r\n\r\n        // TODO: does key handler go on player? im so confused about what goes where rn\r\n        \r\n\r\n\r\n        this.keys = new KeyHandler({\r\n        })\r\n\r\n\r\n        // #region mouse events\r\n         canvas.oncontextmenu = (e:MouseEvent) => e.preventDefault();\r\n         canvas.onmousemove = (e:MouseEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();      \r\n    \r\n            let m = Mouse.getMouse(e, canvas);\r\n            this.mouse.x = m.x;\r\n            this.mouse.y = m.y;\r\n        };\r\n        canvas.onmousedown =  (e:MouseEvent) => {\r\n            // clicking onto game screen should unfocus any inputs (for example: inventory searchbox)\r\n            for (let focus of document.querySelectorAll<HTMLElement>(\":focus\")) focus.blur();\r\n            e.preventDefault();\r\n            e.stopPropagation();  \r\n\r\n            if (e.button == 0) {\r\n                this.mouse.down = Mouse.getMouse(e, canvas);\r\n            }  \r\n            else if (e.button == 2) {\r\n                this.mouse.right = true;\r\n            }\r\n        };\r\n        canvas.onmouseup = (e:MouseEvent) => {\r\n            e.preventDefault();\r\n            e.stopPropagation();  \r\n\r\n            if (e.button == 0) {\r\n                this.mouse.released = true;\r\n            }\r\n        };\r\n        // #endregion\r\n\r\n\r\n        this.player = new Player({ \r\n            x: 0, y: 0, \r\n            w: 10, h: 50, \r\n            color: \"red\" \r\n        });\r\n\r\n        this.ball = new Ball({\r\n            x: (canvas.width / 2) - 10,\r\n            y: (canvas.height / 2) - 10,\r\n            w: 20, \r\n            h: 20,\r\n            radius: 10,\r\n            color: \"yellow\" \r\n        })\r\n    }\r\n\r\n    // #region update\r\n    private frame_count: number = 0;                 // number of frames for this current second\r\n    private fps: number = 0;                         // current fps\r\n    private last_time: number;                       // for tracking delta time\r\n    private update_handle:number;                   // id to requestAnimationFrame (used for cancelling loop)\r\n    /** when tabbing out or stoppping on a breakpoint, delta gets way too large. putting a cap on it to prevent massive movement spikes after resuming */\r\n    static readonly MAX_DELTA = 1/30;\r\n\r\n\r\n    mouse: IMouse = {\r\n        x: 0,\r\n        y: 0,\r\n        released: false,\r\n        down: null,\r\n        right: false\r\n    }\r\n\r\n    update() {\r\n        this.frame_count++;\r\n        let time = performance.now();\r\n        let delta = this.last_time ? Math.min(PeerGame.MAX_DELTA, (time - this.last_time) / 1000) : 0;\r\n\r\n        this.keys.handle(this);\r\n\r\n\r\n        //let post_render = performance.now();\r\n\r\n\r\n        //let update_time = post_update - pre_update;\r\n        //let render_time = post_render - post_update;\r\n        //console.log({update_time, render_time});\r\n\r\n\r\n        this.last_time = time;\r\n\r\n\r\n\r\n        this.keys.update();\r\n\r\n \r\n   \r\n\r\n       // \"mouse.down\" is kept for 1 frame after release to handle mouse drags (i.e. mouse.down -> mouse.x/y = drag vector)\r\n       if (this.mouse.released) {\r\n           this.mouse.released = false;\r\n           this.mouse.down = null;\r\n       }\r\n       this.mouse.right = false;\r\n\r\n\r\n       this.movePlayer(this.player);\r\n\r\n       this.peer.send({\r\n            type: \"player\",\r\n            data: { \r\n                x: this.player.x,\r\n                y: this.player.y\r\n            }\r\n       })\r\n\r\n       return delta;\r\n   }\r\n\r\n    /** moves specified player to mouse position */\r\n    movePlayer(player:Player) {\r\n        // TODO: bound within specified players half\r\n        player.x = this.mouse.x - player.w / 2;\r\n        player.y = this.mouse.y - player.h / 2;\r\n    }\r\n   // #endregion\r\n\r\n\r\n\r\n    _render() { requestAnimationFrame(() => this.render()); }\r\n    render() {\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        for (let p of this.players) p.render(this);\r\n        this.ball.render(this);\r\n        this._render();\r\n    }\r\n\r\n\r\n    async init() {\r\n\r\n        this.players = [this.player, this.remote];\r\n\r\n        // hi adrian\r\n        setInterval(() => this.update(), 1000 / 60);\r\n\r\n        this._render();\r\n    }\r\n\r\n\r\n    peer:P;\r\n    protected async init_connect() {\r\n        \r\n        await this.peer.init();\r\n\r\n        console.log(\"waiting for data channel to open...\");\r\n        await this.peer.waitForChannel();\r\n\r\n        console.log(\"sending init message...\");\r\n\r\n        let init_message = this.peer.waitForMessage<IPongObject>(\"init\");\r\n        this.peer.send({ type: \"init\", data: this.player })\r\n        let response = await init_message;\r\n\r\n        return response;\r\n    \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// TODO: move peers to the game object... they don't need to be on the palyer object\r\n\r\n\r\nexport class HostGame extends PeerGame<Host> {\r\n\r\n\r\n    constructor(rtc:RTCPeerConnection) {\r\n        super(rtc);\r\n    \r\n        this.peer = new Host({\r\n            rtc: this.rtc,\r\n            message_handler: {\r\n                // FUCK: host needs to interpolate as well\r\n                //    it's just OPPONENT that needs to interpolate, whether theyre host or client is irrelevant\r\n                \"player\": (obj:IPongObject) => {    \r\n                    this.remote.x = obj.x;\r\n                    this.remote.y = obj.y;  \r\n                }\r\n            }   \r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    override async init() {   \r\n        \r\n        let client_obj = await this.init_connect();\r\n        console.log(\"CLIENT OBJ RECEIVED: \", client_obj);\r\n        this.remote = new RemotePlayer(client_obj); \r\n        this.remote.color = \"blue\";\r\n        \r\n    \r\n        console.log(\"HOST INIT COMPLETE\");\r\n\r\n        await super.init();\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ClientGame extends PeerGame<Client> {\r\n\r\n    constructor(rtc:RTCPeerConnection) {\r\n        super(rtc);\r\n    \r\n        this.player.color = \"blue\";\r\n\r\n        this.peer = new Client({\r\n            rtc: this.rtc,\r\n            message_handler: {\r\n                // FUCK: host needs to interpolate as well\r\n                //    it's just OPPONENT that needs to interpolate, whether theyre host or client is irrelevant\r\n                \"player\": (obj:IPongObject) => {\r\n                    this.remote.x = obj.x;\r\n                    this.remote.y = obj.y;           \r\n                }\r\n            }   \r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    override async init() {\r\n         \r\n        let host_obj = await this.init_connect();\r\n\r\n        console.log(\"HOST OBJ RECEIVED: \", host_obj);\r\n\r\n        this.remote = new RemotePlayer(host_obj);\r\n\r\n        console.log(\"CLIENT INIT COMPLETE\");\r\n\r\n        await super.init();\r\n    }\r\n\r\n\r\n}","import { IPoint } from \"../math/geom\";\r\nimport { vec } from \"../math/vec\";\r\nimport { Client } from \"../peer/client\";\r\nimport { Host } from \"../peer/host\";\r\nimport { IMessage, Peer } from \"../peer/peer\";\r\nimport { SuperPromise } from \"../util/promise\";\r\nimport { IPongObject, PongObject } from \"./object\";\r\nimport { PeerGame } from \"./peer_game\";\r\n\r\nexport class Player extends PongObject  {\r\n    update(delta: number, game: any) {\r\n    }\r\n\r\n    render(game:PeerGame<any>) {\r\n        //console.log(\"rendering...\", this);\r\n        game.ctx.fillStyle = this.color;\r\n        game.ctx.fillRect(this.x, this.y, this.w, this.h);\r\n    }\r\n}\r\n\r\n\r\n\r\n/** Remote Player is a bit more complicated than local player because it needs to interpolate between client position and true host position */\r\nexport class RemotePlayer extends Player {\r\n\r\n    /** true position on host-side */\r\n    host_pos:IPoint;\r\n\r\n\r\n    /** current progress interpolating between client pos and host pos. gets reset everytime host responds with true position  */\r\n    lerp_prog:number;\r\n\r\n\r\n    override update(delta:number, game:PeerGame<any>) {\r\n        // todo: clamp within this player's half\r\n        let client_pos = game.mouse;\r\n\r\n        const pos = vec.lerp(client_pos, this.host_pos, this.lerp_prog);     \r\n        this.x = pos.x;\r\n        this.y = pos.y;   \r\n    }\r\n\r\n}\r\n\r\n","\r\n/** rounds number to nearest multiple of x \r\n * @example \r\n * round(12, 5) = 10\r\n * round(16, 7) = 14\r\n*/\r\nexport function round (num:number, x:number) { \r\n    return Math.floor(num / x) * x;\r\n}\r\n\r\nexport function sum(arr:number[]) {\r\n    return arr.reduce((a, b) => a + b, 0)\r\n}\r\n\r\nexport function clamp(val:number, min:number, max:number) {\r\n    return Math.max(min, Math.min(max, val));\r\n}\r\n\r\n/** returns true if absolute difference between two numbers lies within threshold (i.e. numbers are \"close enough\") */\r\nexport function near(n1:number, n2:number, thresh = 0.1) {\r\n    return Math.abs(n1 - n2) <= thresh;\r\n}\r\n\r\n\r\n/**\r\n* @param start numnber to start at\r\n* @param end number to end at\r\n* @param perc percentage (0-1) between start and end\r\n*/\r\nexport function lerp (start:number, end:number, perc:number) {\r\n    return (1-perc) * start + (perc * end);\r\n} \r\n\r\n\r\n/** rounds x to nearest multiple of mult */\r\nexport function roundTo(x:number, mult:number) {\r\n    // use case: negative vectors on grid should round down, while positive should round up\r\n    return (x > 0) ? ceilTo(x, mult) : floorTo(x, mult)\r\n}\r\nexport function ceilTo(x: number, mult:number) {\r\n    return Math.ceil(x / mult) * mult;\r\n}\r\nexport function floorTo(x:number, mult:number) {\r\n    return Math.floor(x / mult) * mult;\r\n}\r\n","import { ceilTo, floorTo, lerp, near, round, roundTo } from \"./util\";\r\n\r\ninterface IVector { x: number; y: number }\r\n\r\n/** namespace containing utility functions for dealing with IVectors that aren't an instance of the Vector class */\r\nexport const vec = {\r\n    length: (v:IVector) =>  Math.sqrt(vec.lengthSquared(v)),\r\n    lengthSquared: (v:IVector) => Math.pow(v.x, 2) + Math.pow(v.y, 2),\r\n\r\n    mid: (v1:IVector, v2:IVector) => vec.scale(vec.add(v1, v2), 1/2),\r\n\r\n    rotate: (v:IVector, radians:number, origin?:IVector) => {\r\n        let cos = Math.cos(radians);\r\n        let sin = Math.sin(radians);\r\n        if (origin) {\r\n            return { \r\n                x: (cos * (v.x - origin.x)) + (sin * (v.y - origin.y)) + origin.x, \r\n                y: (cos * (v.y - origin.y)) - (sin * (v.x - origin.x)) + origin.y\r\n            };\r\n        } \r\n        return {\r\n            x: (cos * v.x) - (sin * v.y),\r\n            y: (sin * v.x) + (cos * v.y)\r\n        }\r\n    },\r\n    \r\n    rotate_old: (v:IVector, radians:number, pivot:IVector = null):IVector => {\r\n        let cos = Math.cos(radians);\r\n        let sin = Math.sin(radians);\r\n        let x, y;\r\n\r\n        // not sure why rounding was necessary\r\n        if (pivot) {\r\n            x = Math.round(\r\n                (cos * (v.x - pivot.x)) -\r\n                (sin * (v.y - pivot.y)) +\r\n                pivot.x\r\n            );\r\n\r\n            y = Math.round(\r\n                (sin * (v.x - pivot.x)) +\r\n                (cos * (v.y - pivot.y)) +\r\n                pivot.y\r\n            );\r\n\r\n        }\r\n        else {\r\n            x = (cos * v.x) - (sin * v.y);\r\n            y = (sin * v.x) + (cos * v.y);\r\n        }\r\n\r\n        return { x, y };\r\n    },\r\n\r\n    abs: (v:IVector) => ({ x: Math.abs(v.x), y: Math.abs(v.y) }),\r\n\r\n\r\n\r\n    /**\r\n     * @param start vector to start at\r\n     * @param end vector to end at\r\n     * @param t percentage (0-1) between start and end \r\n     */\r\n    lerp: (start:IVector, end:IVector, t:number) => ({\r\n        x: lerp(start.x, end.x, t),\r\n        y: lerp(start.y, end.y, t)\r\n    }),\r\n\r\n    equals: (v1:IVector, v2:IVector) => !(v1.x != v2.x || v1.y != v2.y),\r\n    near: (v1:IVector, v2:IVector, thresh?:number) => !(!near(v1.x, v2.x, thresh) || !near(v1.y, v2.y, thresh)),\r\n    add: (v1:IVector, v2:IVector) => ({ x: v1.x + v2.x, y: v1.y + v2.y}),\r\n    subtract:(v1:IVector, v2:IVector) => ({ x: v1.x - v2.x, y: v1.y - v2.y }),\r\n\r\n    dist: (v1:IVector, v2:IVector) => vec.length(vec.subtract(v1, v2)),\r\n    //distSquared: (v1:IVector, v2:IVector) => vec3.lengthSquared(vec3.subtract(v1, v2)),\r\n\r\n\r\n    scale: (v:IVector, x:number, y:number = x) => ({ x: v.x * x, y: v.y * y}),\r\n    multiply: (v1:IVector, v2:IVector) => ({ x: v1.x * v2.x, y: v1.y * v2.y }),\r\n    divide: (v1:IVector, v2:IVector) => ({ x: v1.x / v2.x, y: v1.y / v2.y }),\r\n\r\n    sign: (v:IVector) => ({ x: Math.sign(v.x), y: Math.sign(v.y) }),\r\n\r\n    dot:(v1:IVector, v2:IVector) =>  v1.x * v2.x + v1.y * v2.y,\r\n    cross:(v1:IVector, v2:IVector) => (v1.x * v2.y) - (v1.y * v2.x),\r\n\r\n    unit:(v:IVector) => {\r\n        let length = vec.length(v);\r\n        // prevent division by zero\r\n        return length ? vec.scale(v, 1/length) : v;\r\n    },\r\n\r\n    normal: (v:IVector) => {\r\n        return {\r\n            x: -v.y,\r\n            y: v.x\r\n        }\r\n    },\r\n\r\n    /** projects point p onto vector v */\r\n    project(point:IVector, line:IVector) {\r\n\t\tconst denominator = vec.length(line);\r\n\t\tif (denominator == 0) return { x: 0, y: 0 };\r\n        let dot = vec.dot(point,line);\r\n        let dot2 = vec.dot(line, point);\r\n\r\n\t\tconst scalar = dot / denominator;\r\n\t\treturn vec.scale(line, scalar);\r\n\t},\r\n\r\n    roundTo: (v:IVector, value:number) => ({ x: roundTo(v.x, value), y: roundTo(v.y, value) }),\r\n    ceilTo: (v:IVector, value:number) => ({ x: ceilTo(v.x, value), y: ceilTo(v.y, value) }),\r\n    floorTo: (v:IVector, value:number) => ({ x: floorTo(v.x, value), y: floorTo(v.y, value) }),\r\n\r\n    roundToVec: (from:IVector, to:IVector) => ({ x: round(from.x, to.x), y: round(from.y, to.y) }),\r\n    round: (v:IVector) => ({ x: Math.round(v.x), y: Math.round(v.y) }),\r\n    ceil: (v:IVector) => ({ x: Math.ceil(v.x), y: Math.ceil(v.y) }),\r\n    floor: (v:IVector) => ({ x: Math.floor(v.x), y: Math.floor(v.y) }),\r\n\r\n    /** θ = acos [ (a · b) / (|a| |b|) ] */\r\n    angleBetween: (v1:IVector, v2:IVector) => {\r\n        return Math.acos(\r\n            // doing a min here because it somehow became 1.00000002 one time which resulted in a NaN angle\r\n            Math.min(1, vec.dot(v1, v2) / (vec.length(v1) * vec.length(v2)))\r\n        );\r\n    },\r\n\r\n    /** returns angle formed by 3 points (angle between the vectors formed by prev->center and center->next) */\r\n    angle3: (prev:IVector, center:IVector, next:IVector) => {\r\n        let seg1 = vec.subtract(prev, center);\r\n        let seg2 = vec.subtract(next, center); \r\n        return vec.angleBetween(seg1, seg2);\r\n    },\r\n\r\n    angle: (v:IVector) => {\r\n        return Math.atan2(v.y, v.x);\r\n    },\r\n\r\n\r\n    angleTo: (v1:IVector, v2:IVector) => {\r\n        let x_diff = v2.x - v1.x;\r\n        let y_diff =  v2.y - v1.y;\r\n        return Math.atan2(y_diff, x_diff);\r\n    },\r\n\r\n    /** determines if point exists on line\r\n     * @param l1 line start point\r\n     * @param l2 line end point\r\n     * @param p point to check\r\n     * @param threshold threshold to account for rounding errors (higher # = less accurate)\r\n     * @returns true if point p exists on line between l1 and l2 */\r\n    contains(l1:IVector, l2:IVector, p:IVector, threshold:number = 0.001) {\r\n\r\n        // distance from both endpoints to point\r\n        let d = vec.dist(p, l1) + vec.dist(p, l2);\r\n        // length of the line between l1 and l2\r\n        let length = vec.dist(l1, l2);\r\n\r\n        // if sum of two distances are equal to the line's length, the point is on the line\r\n        return near(d, length, threshold);\r\n    },\r\n\r\n    overlap: (p1:IVector, p2:IVector, p3:IVector, p4:IVector) => {\r\n        let slope1 = (vec.angle(vec.subtract(p2, p1)))// + Math.PI) % Math.PI;\r\n        let slope2 = (vec.angle(vec.subtract(p4, p3)))// + Math.PI) % Math.PI;\r\n        let diff = Math.abs(slope2 - slope1);\r\n        if (near(diff, Math.PI, 0.01)) {\r\n            // true if either line contains either of other lines endpoints\r\n            return (\r\n                vec.contains(p1, p2, p3) || \r\n                vec.contains(p1, p2, p4) ||\r\n                vec.contains(p3, p4, p1) ||\r\n                vec.contains(p3, p4, p2)  \r\n            );\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /** returns nearest point on infinite line */\r\n    nearest_point: (line1:IVector, line2:IVector, pnt:IVector) => {\r\n        var L2 = ( ((line2.x - line1.x) * (line2.x - line1.x)) + ((line2.y - line1.y) * (line2.y - line1.y)) );\r\n        if(L2 == 0) return null;\r\n        var r = ( ((pnt.x - line1.x) * (line2.x - line1.x)) + ((pnt.y - line1.y) * (line2.y - line1.y)) ) / L2;\r\n    \r\n        return {\r\n            x: line1.x + (r * (line2.x - line1.x)), \r\n            y: line1.y + (r * (line2.y - line1.y))\r\n        };\r\n    },\r\n    /** returns nearest point on finite line segment */\r\n    nearest_between: (A:IVector, B:IVector, P:IVector) => {\r\n        const v = vec.subtract(B, A);\r\n        const u = vec.subtract(A, P);\r\n        const vu = vec.dot(v,u);\r\n        const t = -vu / vec.square_diag(v);\r\n\r\n        if (t >= 0 && t <= 1) return vec.lerp(A, B, t)\r\n        const g0 = vec.square_diag(vec.subtract(A, P))\r\n        const g1 = vec.square_diag(vec.subtract(B, P))\r\n        return g0 <= g1 ? A : B\r\n    },\r\n\r\n    /** length of hypotenuse squared */\r\n    square_diag: (v:IVector) => {\r\n        return v.x ** 2 + v.y ** 2; \r\n    },\r\n\r\n    /** returns the shortest distance to the (infinite) line */\r\n    shortest_dist: (line1:IVector, line2:IVector, pnt:IVector) => {\r\n        var L2 = ( ((line2.x - line1.x) * (line2.x - line1.x)) + ((line2.y - line1.y) * (line2.y - line1.y)) );\r\n        if(L2 == 0) return Infinity;\r\n        var s = (((line1.y - pnt.y) * (line2.x - line1.x)) - ((line1.x - pnt.x) * (line2.y - line1.y))) / L2;\r\n        return Math.abs(s) * Math.sqrt(L2);\r\n    },\r\n\r\n    /** returns intersection point of 2 vectors, or null if they don't intersect */\r\n    intersect(p1:IVector, p2:IVector, p3:IVector, p4:IVector) {\r\n\r\n        let x1 = p1.x;\r\n        let x2 = p2.x;\r\n        let x3 = p3.x;\r\n        let x4 = p4.x;\r\n\r\n        let y1 = p1.y;\r\n        let y2 = p2.y;\r\n        let y3 = p3.y;\r\n        let y4 = p4.y;\r\n\r\n        // Check if none of the lines are of length 0\r\n        if ((x1 === x2 && y1 === y2) || (x3 === x4 && y3 === y4)) return null\r\n    \r\n        let denominator = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1))\r\n    \r\n        // Lines are parallel\r\n        if (denominator === 0) return null\r\n        \r\n        let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator\r\n        let ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / denominator\r\n    \r\n        // is the intersection along the segments\r\n        if (ua < 0 || ua > 1 || ub < 0 || ub > 1) return null\r\n    \r\n        return { \r\n            x: x1 + ua * (x2 - x1),\r\n            y: y1 + ua * (y2 - y1)\r\n        }\r\n    },\r\n\r\n    /** converts a multi-dimensional array to list of IVectors \r\n     * @example [[1,2]] -> [{x:1,y:2}] */\r\n    fromArray: (array: [number,number][] = []) => array.map(arr => ({ x: arr[0], y: arr[1] })),\r\n    \r\n\r\n    sum: (arr:IVector[]) => {\r\n        let sum = {x : 0, y: 0};\r\n        for (let v of arr) {\r\n            sum.x += v.x;\r\n            sum.y += v.y;\r\n        }\r\n        return sum;\r\n    },\r\n\r\n\r\n    /** returns 0 if c is on the line, negative if point is to left of line, positive if point is to the right of line\r\n     * @param a line point 1\r\n     * @param b line point 2\r\n     * @param c point to compare with line\r\n     */\r\n    line_point_dir: (a:IVector, b:IVector, c:IVector) => {\r\n        return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\r\n    },\r\n        \r\n\r\n\r\n    copy: (v:IVector):IVector => ({ x:v.x, y:v.y }),\r\n\r\n\r\n};\r\n\r\n\r\n\r\n","import { Peer } from \"./peer\";\r\n\r\nexport class Client extends Peer {\r\n    \r\n    public async init() {\r\n        const rtc = this.rtc;\r\n\r\n        const host:RTCSessionDescription = JSON.parse(window.prompt(\"Paste Host Session\"));\r\n\r\n        var p = this.getCandidates();\r\n\r\n        await rtc.setRemoteDescription(host);\r\n        const answer = await rtc.createAnswer();\r\n        await rtc.setLocalDescription(answer)\r\n\r\n        const candidate_count = await p;\r\n        console.log(`found ${candidate_count} ICE candidates...`);\r\n\r\n\r\n        \r\n\r\n        // receiving a data channel...\r\n        rtc.ondatachannel = (event) => {\r\n            console.log(\"CLIENT: data channel!\");\r\n            this.channel_init(event.channel);    \r\n        }\r\n\r\n\r\n        const client_json = JSON.stringify(rtc.localDescription.toJSON());\r\n        //console.log(\"CLIENT: \");\r\n        //console.log(client_json);\r\n        await navigator.clipboard.writeText(client_json);\r\n        this.log(\"copied client desc to clipboard...\");\r\n    }\r\n}","import { Peer } from \"./peer\";\r\n\r\nexport class Host extends Peer {\r\n\r\n    public async init() {\r\n        const rtc = this.rtc;\r\n\r\n        // receiving a data channel...\r\n        rtc.ondatachannel = function (event) {\r\n            console.log(\"HOST: data channel!\");\r\n        }\r\n\r\n        this.channel_init(rtc.createDataChannel(\"data\"));\r\n        \r\n        // todo: prompt room_id here\r\n\r\n        const offer = await rtc.createOffer({\r\n            offerToReceiveAudio: true, // these need to be true or else ice states remain \"new\" and you never receive any candidates...\r\n            //offerToReceiveVideo: true\r\n            offerToReceiveVideo: true\r\n        })\r\n        await rtc.setLocalDescription(offer);\r\n\r\n\r\n        const host_json = JSON.stringify(rtc.localDescription.toJSON());\r\n\r\n        await navigator.clipboard.writeText(host_json);\r\n        this.log(\"copied host desc to clipboard...\");\r\n\r\n        const json = window.prompt(\"Paste Remote Answer\");\r\n        const remote:RTCSessionDescription = JSON.parse(json);\r\n        console.log(\"Parsed Remote Description:\", remote);\r\n\r\n        var candidate_promise = this.getCandidates();\r\n\r\n        await rtc.setRemoteDescription(remote);\r\n        console.log(\"Set Remote Description\");\r\n\r\n        const candidate_count = await candidate_promise;\r\n        console.log(`Fund ${candidate_count} ICE Candidates`);\r\n\r\n        console.log(rtc);\r\n\r\n\r\n        rtc.onconnectionstatechange = function(e) {\r\n            console.log(\"connection state change: \", e);\r\n            console.log(\"state: \", rtc.connectionState);\r\n\r\n            if (rtc.connectionState == \"connected\") {\r\n            \r\n                console.log(\"CONNECTED...\");\r\n            }\r\n        }\r\n    }\r\n}","import { SuperPromise } from \"../util/promise\";\r\n\r\nexport interface IMessage<T> {\r\n    type:string,\r\n    data: T\r\n\r\n}\r\n\r\nexport interface IPeer {\r\n    rtc:RTCPeerConnection;\r\n    /** maps message type to action */\r\n    message_handler?: Record<string,Function>;\r\n}\r\n\r\n\r\n\r\n\r\nexport abstract class Peer {\r\n\r\n    protected rtc:RTCPeerConnection;\r\n    protected channel:RTCDataChannel;\r\n    protected message_handler: Record<string,Function>;\r\n\r\n\r\n    constructor(obj:IPeer) {\r\n        this.rtc = obj.rtc;\r\n        this.message_handler = obj.message_handler || {};\r\n    }\r\n    public abstract init():Promise<void>;\r\n  \r\n\r\n    send(msg:IMessage<any>) { \r\n        this.channel.send(JSON.stringify(msg)); \r\n    }\r\n\r\n    log(message:string) {\r\n        const div = document.createElement(\"div\");\r\n        div.innerText = message;\r\n        document.getElementsByTagName(\"main\")[0].append(div);\r\n    }\r\n\r\n\r\n    /** collection of promise resolvers for each status type. whenever data channel changes status, it will resolve these promises */\r\n    private channel_resolve: Record<RTCDataChannelState,SuperPromise<any>[]> = {\r\n        \"closed\": [],\r\n        \"closing\": [],\r\n        \"connecting\": [],\r\n        \"open\": []\r\n    };\r\n\r\n    /** waits for channel status to be \"open\" */\r\n    waitForChannel(status:RTCDataChannelState = \"open\") {\r\n        if (this.channel?.readyState == status) return Promise.resolve();\r\n\r\n        let promise = new SuperPromise();\r\n        this.channel_resolve[status].push(promise);\r\n\r\n        console.log(\"channel_resolve: \", this.channel_resolve);\r\n\r\n        return promise.promise;\r\n    }\r\n\r\n    // #region waiting for messages\r\n    private message_resolve: Record<string, SuperPromise<any>[]> = {};\r\n    /** resolves with the next message of specified type  */\r\n    waitForMessage<T>(type:string) {\r\n        let promise = new SuperPromise<T>();\r\n\r\n        let array;\r\n        if (!(type in this.message_resolve)) array = this.message_resolve[type] = [];\r\n        else array = this.message_resolve[type];\r\n        array.push(promise);\r\n\r\n        return promise.promise;\r\n    }\r\n    // #endregion\r\n\r\n\r\n    channel_init(channel:RTCDataChannel) {\r\n        this.channel = channel;\r\n\r\n        // debug\r\n        const btnSend = <HTMLButtonElement> document.getElementById(\"btnSend\");\r\n\r\n        channel.onopen = channel.onclose =  (event) => {\r\n            console.log(\"channel status change: \", event);\r\n            if (channel) {\r\n                console.log(\"channel status: \", {\r\n                    channel,\r\n                    readyState: channel.readyState,\r\n                    channel_resolve: this.channel_resolve\r\n                });\r\n\r\n                let resolvers = this.channel_resolve[channel.readyState];\r\n                for(let promise of resolvers) promise.resolve(null);\r\n                resolvers = [];\r\n                \r\n                btnSend.disabled = channel.readyState != \"open\"\r\n            }\r\n            else btnSend.disabled = true;\r\n        };\r\n\r\n        channel.onmessage = (e) => {\r\n\r\n            try {\r\n                let msg = <IMessage<any>>JSON.parse(e.data);\r\n\r\n                // executing via message handler\r\n                if (msg.type in this.message_handler) {\r\n                    this.message_handler[msg.type](msg.data);\r\n                }\r\n                else {\r\n                    console.log(\"invalid message type: \", msg.type);\r\n                }\r\n\r\n                // resolve message awaiters\r\n                if (msg.type in this.message_resolve) {\r\n                    for (let promise of this.message_resolve[msg.type]) promise.resolve(msg.data);\r\n                    delete this.message_resolve[msg.type];\r\n                }\r\n\r\n            }\r\n            catch (ex) {\r\n                console.error(\"Error parsing channel data: \", { event: e, exception: ex });\r\n            }\r\n            //this.log(e.data);\r\n        };\r\n\r\n        \r\n    }\r\n\r\n    /** resolves once null candidate is found (which apparently signifies end of candidate list) */\r\n    async getCandidates() {\r\n        // TODO: i foresee issues with \"ice trickling here\"\r\n        \r\n        let candidate_count = 0;\r\n        return new Promise((resolve, reject) => {\r\n\r\n            const style = \"color:#099\";\r\n\r\n            this.rtc.onicecandidate = async (event:RTCPeerConnectionIceEvent) => {\r\n                console.log(\"%cICE Candidate: \", style, event); \r\n            \r\n                if (event.candidate) {\r\n                    try { \r\n                        console.log(\"%cAdding Ice Candidate: \", style, event.candidate);\r\n                        await this.rtc.addIceCandidate(event.candidate);\r\n                        candidate_count++;\r\n                    } \r\n                    catch (error) {\r\n                        console.error(\"%cFailed to add ICE Candidate: \", style, { event, error });\r\n                        reject(error);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(`%cNull Candidate Found. Resolving with ${candidate_count}...`, style)\r\n                    resolve(candidate_count);\r\n                }\r\n            \r\n            }\r\n            \r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n}","import { IPoint } from \"../math/geom\";\r\n\r\n\r\n/** mouse utility functions for converting window to canvas coordinates etc */\r\nexport const Mouse = {\r\n\r\n    getMouse(e:MouseEvent, canvas:HTMLCanvasElement):IPoint {\r\n        // TODO: might need to account for canvas offset as well\r\n        //       canvas is currently 100% width/height so not worrying about it\r\n        let fit = this.getCanvasFit(canvas);\r\n        return {\r\n            x: (e.clientX - (canvas.clientWidth - fit.x) / 2) * canvas.width / fit.x,\r\n            y: (e.clientY - (canvas.clientHeight - fit.y) / 2) * canvas.height / fit.y,\r\n        }\r\n    },\r\n\r\n    // because canvas is using \"object-fit:contain\", need to account for black bars that are included in clientWidth/clientHeight\r\n    getCanvasFit(canvas:HTMLCanvasElement):IPoint {\r\n\r\n        const ratio = canvas.width / canvas.height;\r\n        const scaled = canvas.clientWidth / canvas.clientHeight;\r\n\r\n        if (ratio > scaled) {\r\n            // window is too narow -> vertical offset (black bars)\r\n            return {\r\n                x: canvas.clientWidth,\r\n                y: canvas.clientWidth / ratio\r\n            }\r\n        }\r\n        else {\r\n            // window is too short, -> horizontal offset (black bars)\r\n            return {\r\n                x: canvas.clientHeight * ratio,\r\n                y: canvas.clientHeight \r\n            }      \r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","/** promise that can be resolve/rejected from outside scope */\r\nexport class SuperPromise<T> {\r\n\r\n    readonly promise: Promise<T>;\r\n    resolve: (value:unknown) => void;\r\n    reject: (value:unknown) => void;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.reject = reject\r\n            this.resolve = resolve\r\n        })\r\n    }\r\n\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ClientGame, HostGame } from \"./game/peer_game\";\r\nexport {};\r\n\r\n\r\n\r\n// PROCESS:\r\n// Step #1: initiate connection\r\n// Step #2: host creates game, sends an \"init\" message to client\r\n// Step #3: client receives \"init\" message, creates game, sends \"init\" back with player info\r\n// Step #4: both games are now updating and sending data back and forth while listening to input\r\n//      - host is real-time input, no lag\r\n//      - client is interpolating between client-side (fake) position and host-side (actual) position\r\n//      - every update, client sends a message to host, and host sends a message to client\r\n//          keep track of a latency?\r\n\r\n\r\n// ISSUE: need TURN for certains situations (like VPNs or symmetric NATs or w/e)\r\n//          but these free public turn servers are disconnecting and lagging like crazy.\r\n//          not sure if it's because TCP is slower or just the servers are bad\r\n\r\nconst rtc = new RTCPeerConnection({\r\n    iceServers: [\r\n        { urls: 'stun:stun.l.google.com:19302' },\r\n    ]\r\n});\r\n\r\nconsole.log(\"Connection: \", rtc);\r\n\r\n\r\n\r\n\r\n\r\n// #region hosting...\r\nconst btnHost = <HTMLButtonElement>document.getElementById(\"btnHost\");\r\nbtnHost.onclick = async function() {\r\n    btnHost.disabled = btnJoin.disabled = true;\r\n    let game = new HostGame(rtc);\r\n    await game.init();\r\n}\r\n// #endreigon\r\n\r\n\r\n\r\n// #region joining...\r\nconst btnJoin = <HTMLButtonElement>document.getElementById(\"btnJoin\");\r\nbtnJoin.onclick = async function() {\r\n    btnJoin.disabled = btnHost.disabled = true;\r\n    let game = new ClientGame(rtc);\r\n    await game.init();\r\n}\r\n// #endregion\r\n\r\n\r\nconst btnSend = <HTMLButtonElement>document.getElementById(\"btnSend\");\r\nbtnSend.onclick = function() {\r\n    //player.send(\"data from send button!\");\r\n}\r\n\r\n\r\n"],"names":[],"sourceRoot":""}